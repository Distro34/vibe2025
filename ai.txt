Этап 1: Настройка проекта и БД

Создай инструкции по настройке проекта:
1. Инициализация npm проекта
2. Установка зависимостей: mysql2
3. Создание БД MySQL с именем 'todolist'
4. Создание таблицы 'items' с колонками: id INT AUTO_INCREMENT PRIMARY KEY, text VARCHAR(255)
Этап 2: Базовый сервер и HTML

Создай:
1. HTTP сервер на Node.js (порт 3000)
2. index.html с базовой структурой To-Do List
3. Таблицу с колонками: Number, Text, Action
4. Форму добавления элементов с полем ввода и кнопкой
Этап 3: Отображение элементов из БД

Реализуй:
1. Функцию подключения к MySQL
2. Запрос SELECT для получения всех элементов
3. Генерацию HTML строк таблицы из данных БД
4. Замену плейсхолдера {{rows}} в HTML на реальные данные
Этап 4: Добавление элементов

Добавь функционал:
1. Обработчик POST /add-item
2. Вставку новых записей в БД через INSERT
3. Клиентскую функцию addItem() с fetch запросом
4. Очистку поля ввода после добавления
5. Перезагрузку страницы после успешного добавления
Этап 5: Удаление элементов

Реализуй удаление:
1. Кнопку "Remove" для каждой строки таблицы
2. Обработчик POST /delete-item
3. SQL запрос DELETE WHERE id=?
4. Клиентскую функцию removeItem(id)
5. ID-based удаление вместо индексов массива
Этап 6: Редактирование элементов

Добавь редактирование:
1. Кнопку "Edit" рядом с "Remove"
2. Обработчик POST /edit-item
3. SQL запрос UPDATE text WHERE id=?
4. Клиентскую функцию editItem(id) с prompt
5. Проверку на пустой ввод и отмену редактирования
Этап 7: Обработка ошибок

Улучши обработку ошибок:
1. Try/catch для всех асинхронных операций
2. Ответы сервера с success:false при ошибках
3. Клиентские alert с описанием ошибок
4. Защиту от SQL-инъекций через параметризованные запросы