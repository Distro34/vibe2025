const TelegramBot = require('node-telegram-bot-api');
const User = require('../models/userModel');
const Task = require('../models/taskModel');
require('dotenv').config();

const token = process.env.TELEGRAM_TOKEN;
const bot = new TelegramBot(token, { polling: true });

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–ø—Ä–∞–≤–∫–∏
function sendHelp(chatId) {
    bot.sendMessage(
        chatId,
        'üìö *–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º To-Do –±–æ—Ç–∞*\n\n' +
        '*/start* - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n' +
        '*/link <–ª–æ–≥–∏–Ω>* - –ü—Ä–∏–≤—è–∑–∞—Ç—å –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç\n' +
        '*/tasks* - –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –≤–∞—à–∏ –∑–∞–¥–∞—á–∏\n' +
        '*/add <—Ç–µ–∫—Å—Ç>* - –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É\n' +
        '*/help* - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É\n\n' +
        '–ü—Ä–∏–º–µ—Ä—ã:\n' +
        '`/link alex123` - –ü—Ä–∏–≤—è–∑–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç\n' +
        '`/add –ö—É–ø–∏—Ç—å –º–æ–ª–æ–∫–æ` - –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É\n' +
        '`/tasks` - –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∑–∞–¥–∞—á–∏',
        { parse_mode: 'Markdown' }
    );
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    sendHelp(chatId);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /help
bot.onText(/\/help/, (msg) => {
    const chatId = msg.chat.id;
    sendHelp(chatId);
});

// –ü—Ä–∏–≤—è–∑–∫–∞ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞
bot.onText(/\/link (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const username = match[1];

    try {
        const user = await User.findByUsername(username);
        if (!user) {
            return bot.sendMessage(
                chatId,
                '‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è —Å–Ω–∞—á–∞–ª–∞ –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏.'
            );
        }

        await User.setTelegramChatId(user.id, chatId);
        bot.sendMessage(
            chatId,
            '‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–≤–æ–π –∞–∫–∫–∞—É–Ω—Ç –ø—Ä–∏–≤—è–∑–∞–Ω!\n' +
            '–¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤—ã—Ö –∑–∞–¥–∞—á–∞—Ö.'
        );
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ Telegram:', error);
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–≤—è–∑–∫–µ. –ü–æ–ø—Ä–æ–±—É–π –ø–æ–∑–∂–µ.');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∑–∞–¥–∞—á
bot.onText(/\/tasks/, async (msg) => {
    const chatId = msg.chat.id;

    try {
        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ chat_id
        const user = await User.findByTelegramChatId(chatId);
        if (!user) {
            return bot.sendMessage(chatId, '‚ùå –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /link <–ª–æ–≥–∏–Ω>');
        }
        
        // –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const tasks = await Task.getAll(user.id);

        if (tasks.length === 0) {
            return bot.sendMessage(chatId, '‚úÖ –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–¥–∞—á!');
        }

        // –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–¥–∞—á–∞–º–∏
        let message = 'üìù –í–∞—à–∏ –∑–∞–¥–∞—á–∏:\n\n';
        tasks.forEach((task, index) => {
            message += `${index + 1}. ${task.text}\n`;
            message += `   üïí –°–æ–∑–¥–∞–Ω–æ: ${new Date(task.created_at).toLocaleString()}\n`;
            message += `   ‚úÖ –°—Ç–∞—Ç—É—Å: ${task.completed ? '–í—ã–ø–æ–ª–Ω–µ–Ω–æ' : '–ê–∫—Ç–∏–≤–Ω–æ'}\n\n`;
        });

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        const options = {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É', callback_data: 'add_task' },
                        { text: '–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫', callback_data: 'refresh_tasks' }
                    ]
                ]
            }
        };

        bot.sendMessage(chatId, message, options);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–¥–∞—á:', error);
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞–¥–∞—á. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    }
});

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á —á–µ—Ä–µ–∑ –±–æ—Ç–∞
bot.onText(/\/add (.+)/, async (msg, match) => {
    const chatId = msg.chat.id;
    const text = match[1];

    try {
        const user = await User.findByTelegramChatId(chatId);
        if (!user) {
            return bot.sendMessage(
                chatId, 
                '‚ùå –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /link <–ª–æ–≥–∏–Ω>'
            );
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
        await Task.create(user.id, text);
        bot.sendMessage(chatId, `‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: "${text}"`);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏:', error);
        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏');
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', async (callbackQuery) => {
    const chatId = callbackQuery.message.chat.id;
    const messageId = callbackQuery.message.message_id;
    const data = callbackQuery.data;

    try {
        if (data === 'refresh_tasks') {
            // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.deleteMessage(chatId, messageId);
            
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
            await bot.sendMessage(chatId, 'üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∑–∞–¥–∞—á...');
            
            // –ò–º–∏—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É /tasks
            const fakeMessage = { 
                chat: { id: chatId },
                text: '/tasks'
            };
            bot.processUpdate({ message: fakeMessage });
        }
        else if (data === 'add_task') {
            // –ó–∞–ø—Ä–æ—Å –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏
            await bot.sendMessage(chatId, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ–π –∑–∞–¥–∞—á–∏:');
            bot.once('message', async (msg) => {
                if (msg.text && !msg.text.startsWith('/')) {
                    try {
                        // –ù–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                        const user = await User.findByTelegramChatId(chatId);
                        if (!user) {
                            return bot.sendMessage(chatId, '‚ùå –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /link <–ª–æ–≥–∏–Ω>');
                        }
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–∞—á—É
                        await Task.create(user.id, msg.text);
                        
                        bot.sendMessage(chatId, `‚úÖ –ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: "${msg.text}"`);
                    } catch (error) {
                        console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏:', error);
                        bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –∑–∞–¥–∞—á–∏');
                    }
                }
            });
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ callback:', error);
        bot.sendMessage(chatId, '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞');
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
exports.sendNotification = (chatId, message) => {
    return bot.sendMessage(chatId, message);
};